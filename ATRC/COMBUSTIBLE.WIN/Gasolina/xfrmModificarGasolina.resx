<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bbiModificar.ImageOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>